name: Supabase Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - 'supabase/**'
      - '.github/workflows/supabase-preview.yml'

jobs:
  supabase-preview:
    runs-on: ubuntu-latest
    name: Supabase Preview Environment Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Wait for Supabase Preview Environment
        if: github.event.action != 'closed'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const maxWaitTime = 10 * 60 * 1000; // 10 minutes
            const pollInterval = 30 * 1000; // 30 seconds
            const startTime = Date.now();
            
            console.log('Waiting for Supabase preview environment to be ready...');
            
            while (Date.now() - startTime < maxWaitTime) {
              // Check if Supabase has commented with preview environment details
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const supabaseComment = comments.data.find(comment => 
                comment.user.login === 'supabase[bot]' || 
                comment.body.includes('Preview environment') ||
                comment.body.includes('supabase.co')
              );
              
              if (supabaseComment) {
                console.log('‚úÖ Supabase preview environment detected');
                console.log('Comment:', supabaseComment.body);
                
                // Check if the comment indicates success or failure
                if (supabaseComment.body.includes('failed') || supabaseComment.body.includes('error')) {
                  core.setFailed('‚ùå Supabase preview environment deployment failed');
                  return;
                }
                
                if (supabaseComment.body.includes('ready') || supabaseComment.body.includes('Preview environment')) {
                  console.log('‚úÖ Supabase preview environment is ready');
                  return;
                }
              }
              
              console.log('Still waiting for Supabase preview environment...');
              await new Promise(resolve => setTimeout(resolve, pollInterval));
            }
            
            // If we get here, we timed out
            console.log('‚ö†Ô∏è Timeout waiting for Supabase preview environment');
            // Don't fail the check on timeout - might be a slow deployment
            
      - name: Validate Preview Environment
        if: github.event.action != 'closed'
        run: |
          echo "‚úÖ Supabase preview environment check completed"
          echo "If migrations were included in this PR, a preview database should be available"
          echo "Check the PR comments for the preview environment URL"

      - name: Cleanup on PR Close
        if: github.event.action == 'closed'
        run: |
          echo "üßπ PR closed - Supabase preview environment will be automatically cleaned up"