name: Quality Gates

on:
  pull_request:
    branches: [ develop, staging, main ]
  push:
    branches: [ develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    name: Code Quality & Security
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: TypeScript check
      run: npx tsc --noEmit --project tsconfig.ci.json
      
    - name: Lint check
      run: npm run lint
      
    - name: Run tests
      run: npx vitest run
      
    - name: Build check
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
        RAPIDAPI_HOST: ${{ secrets.RAPIDAPI_HOST }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_CI_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_CI_URL }}
        
    - name: Security audit
      run: npm audit --audit-level high
      
    - name: Dependency vulnerability check
      run: |
        # Check for high/critical vulnerabilities
        npm audit --audit-level high --production
        
        # Check for license compliance issues
        npx license-checker --summary --production || echo "License check completed"
        
        # Check for outdated dependencies with security issues
        npm outdated --depth=0 || echo "Dependency check completed"

  documentation-check:
    runs-on: ubuntu-latest
    name: Documentation Validation
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check required documentation files
      run: |
        echo "Checking for required documentation files..."
        
        # Check for essential docs
        test -f "CLAUDE.md" || (echo "❌ Missing CLAUDE.md" && exit 1)
        test -f "documentation/DATABASE.md" || (echo "❌ Missing documentation/DATABASE.md" && exit 1)
        test -f "documentation/CHANGELOG.md" || (echo "❌ Missing documentation/CHANGELOG.md" && exit 1)
        
        echo "✅ All required documentation files present"
        
    - name: Validate commit message format
      if: github.event_name == 'pull_request'
      run: |
        # Check if PR title follows conventional commit format
        PR_TITLE="${{ github.event.pull_request.title }}"
        if [[ "$PR_TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?:[[:space:]].+ ]]; then
          echo "✅ PR title follows conventional commit format"
        else
          echo "❌ PR title should follow conventional commit format (feat: description)"
          echo "Current title: $PR_TITLE"
          exit 1
        fi

  environment-specific-checks:
    runs-on: ubuntu-latest
    name: Environment-Specific Validations
    if: contains(github.base_ref, 'main') || contains(github.ref, 'main')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Production deployment safety checks
      run: |
        echo "Running production deployment safety checks..."
        
        # Check for any TODO/FIXME comments in critical files
        if grep -r "TODO\|FIXME" src/ --include="*.ts" --include="*.tsx" | head -10; then
          echo "⚠️  Found TODO/FIXME comments. Review before production deployment."
        fi
        
        # Check for console.log statements
        if grep -r "console\.log" src/ --include="*.ts" --include="*.tsx" | head -5; then
          echo "⚠️  Found console.log statements. Consider removing for production."
        fi
        
        echo "✅ Production safety checks completed"

  branch-protection-validation:
    runs-on: ubuntu-latest
    name: Branch Protection Validation
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate branch protection rules
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Validating branch protection rules..."
        
        # Get the target branch for this PR
        TARGET_BRANCH="${{ github.base_ref }}"
        
        # Check if branch protection rules exist for critical branches
        if [[ "$TARGET_BRANCH" == "main" || "$TARGET_BRANCH" == "staging" || "$TARGET_BRANCH" == "develop" ]]; then
          echo "✅ PR targeting protected branch: $TARGET_BRANCH"
          
          # Validate PR requirements
          if [[ "${{ github.event.pull_request.draft }}" == "true" ]]; then
            echo "❌ Draft PRs not allowed for protected branches"
            exit 1
          fi
          
          # Check for required reviews (GitHub enforces this, but we can validate intent)
          echo "✅ Branch protection validation passed for $TARGET_BRANCH"
        else
          echo "ℹ️  PR targeting non-protected branch: $TARGET_BRANCH"
        fi
        
        # Validate commit signatures if required (future enhancement)
        echo "✅ Branch protection validation completed"
        
    - name: Validate PR source branch naming
      run: |
        SOURCE_BRANCH="${{ github.head_ref }}"
        
        # Validate feature branch naming convention
        if [[ "$SOURCE_BRANCH" =~ ^(feature|bugfix|hotfix|chore)\/[a-z0-9-]+ ]]; then
          echo "✅ Source branch follows naming convention: $SOURCE_BRANCH"
        elif [[ "$SOURCE_BRANCH" =~ ^(develop|staging|main)$ ]]; then
          echo "✅ Source branch is a protected branch: $SOURCE_BRANCH"
        else
          echo "⚠️  Source branch doesn't follow naming convention: $SOURCE_BRANCH"
          echo "Consider using: feature/description, bugfix/description, etc."
        fi